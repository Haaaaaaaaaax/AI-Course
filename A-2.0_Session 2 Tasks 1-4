{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "7fd75515",
   "metadata": {},
   "source": [
    "# # Task 1\n",
    "# Write a program to enter a number from a user and print its absolute value."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "a7f5a9e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Write your number: -20\n",
      "20\n"
     ]
    }
   ],
   "source": [
    "x = int(input(\"Write your number: \"))\n",
    "\n",
    "print(abs(x))\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2df37eec",
   "metadata": {},
   "source": [
    "# # Task 2\n",
    "# Write a program to enter a year from a user and check if it is a leap year or not.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "11fc007c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2023-11-13T11:40:06.683003Z",
     "start_time": "2023-11-13T11:40:04.793805Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Write your year: 100\n",
      "100 is not a leap year.\n"
     ]
    }
   ],
   "source": [
    "x = int(input(\"Write your year: \"))\n",
    "\n",
    "if (x % 4 == 0 and x % 100 != 0) or (x % 400 == 0):\n",
    "    print(x, \"is a leap year.\")\n",
    "else :\n",
    "    print(x, \"is not a leap year.\")\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19a18d96",
   "metadata": {},
   "source": [
    "# # Task 3\n",
    "# Write a program to enter the age of 3 person and print the oldest and the youngest among them."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "70333b94",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "What's your age?\n",
      "10\n",
      "What's your age?\n",
      "20\n",
      "What's your age?\n",
      "30\n",
      "The oldest is 30\n",
      "The youngest is 10\n"
     ]
    }
   ],
   "source": [
    "x = int(input(\"What's your age?\\n\"))\n",
    "y = int(input(\"What's your age?\\n\"))\n",
    "z = int(input(\"What's your age?\\n\"))\n",
    "\n",
    "if (x<y<z):\n",
    "    print(\"The oldest is\",z)\n",
    "    print(\"The youngest is\",x)\n",
    "elif ((x>y<z)&(x>z)):\n",
    "    print(\"The oldest is\",x)\n",
    "    print(\"The youngest is\",y)\n",
    "elif ((x>y<z)&(x<z)):\n",
    "    print(\"The oldest is\",z)\n",
    "    print(\"The youngest is\",y)\n",
    "elif ((x<y>z)&(x>z)):\n",
    "    print(\"The oldest is\",y)\n",
    "    print(\"The youngest is\",z)\n",
    "elif ((x<y>z)&(x<z)):\n",
    "    print(\"The oldest is\",y)\n",
    "    print(\"The youngest is\",x)\n",
    "else :\n",
    "    print(\"The oldest is\",x)\n",
    "    print(\"The youngest is\",z)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bef68352",
   "metadata": {},
   "source": [
    "# # Task 4\n",
    "# What is the name of the library that encrypted the number like the password?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8dcf2e1e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "What's your password: ········\n",
      "12334\n"
     ]
    }
   ],
   "source": [
    "from getpass import getpass\n",
    "password = getpass(\"What's your password: \")\n",
    "print(password)\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
